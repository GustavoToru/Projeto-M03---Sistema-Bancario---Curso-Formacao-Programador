# -*- coding: utf-8 -*-
"""M03 - Projeto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c3og0l4mwvaiJFajQ0vaDWTseRAaGk87

# Sistema Bancário

Crie uma lógica para simular um fluxo de um sistema bancário.

**Esse programa deverá ter**



1. Um menu com seleção de operação
2. Criação de contas
3. Remoção de contas
4. Listagem de todas as contas criadas
5. Adicionar saldo / Remover saldo
6. Transferir valor entre contas
7. Consultar saldo de uma conta específica

As contas devem ser armazenadas em uma lista e cada conta deve ser um dicionário (chave-valor) contendo as seguintes chaves:


1.  numero_conta
2.  saldo_conta
"""

contas = []

def criar_conta():
  verificador_conta_existe = False
  dados_nova_conta = {}
  dados_nova_conta['numero_conta'] = input('Digite o número da nova conta:\n>>> ')

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == dados_nova_conta['numero_conta']:
      verificador_conta_existe = True
      break

  if verificador_conta_existe == True:
    print('\nO número da conta já existe. Tente novamente.')
  else:
    dados_nova_conta['saldo_conta'] = float(input('Digite o saldo da nova conta:\n>>> '))
    contas.append(dados_nova_conta)
    print('\nOperação efetuada com sucesso.')

def remover_conta():
  numero_conta = input('Digite o número da conta para remover:\n>>> ')
  conta_encontrada = False
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      conta_encontrada = True
      contas.remove(conta_em_consulta)
      print('\nOperação efetuada com sucesso.')
      break
  if not conta_encontrada:
    print('\nO número da conta não existe. Tente novamente.')

def listar_contas():
  if len(contas) == 0:
    print('\nNão há contas cadastradas.')
  else:
    index = 1
    for conta_em_consulta in contas:
      if conta_em_consulta['saldo_conta'] >= 0:
        status = 'Positivo'
      else:
        status = 'Negativo'
      print(f'{index} - Número da conta: {conta_em_consulta["numero_conta"]} | Saldo da conta: R${conta_em_consulta["saldo_conta"]:.2f} ({status})')
      index += 1

def adicionar_saldo_em_conta():
  numero_conta = input('Digite o número da conta:\n>>> ')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_credito = float(input('Digite o valor do crédito:\n>>> R$ '))
      if valor_credito <= 0:
        print('\nValores negativos não são aceitos. Tente novamente.')
        return
      else:
        conta_em_consulta['saldo_conta'] += valor_credito
        print('\nOperação efetuada com sucesso.')
        return
  print('\nNúmero da conta não foi encontrado. Tente novamente.')

def remover_saldo_em_conta():
  numero_conta = input('Digite o número da conta:\n>>> ')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_debito = float(input('Digite o valor do débito:\n>>> R$ '))
      if valor_debito <= 0:
        print('\nValores negativos não são aceitos. Tente novamente.')
        return
      else:
        conta_em_consulta['saldo_conta'] -= valor_debito
        print('\nOperação efetuada com sucesso.')
        return

def transferir_saldo_entre_contas():
  conta_partida = input('Digite o número da sua conta:\>>> ')
  verificador_etapa = 0
  # Aqui começamos a identificar a primeira conta
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == conta_partida:
      verificador_etapa = 1
      conta_destino = input('Digite o número da conta destino:\n>>> ')
      if conta_destino != conta_partida:

        # Aqui identificamos a segunda conta
        for conta_destino_em_consulta in contas:
          if conta_destino_em_consulta['numero_conta'] == conta_destino:
            verificador_etapa = 3
            valor_transferencia = float(input('Digite o valor da transferência:\n>>> R$')) #apos confirmar a primeira e a segunda conta, e que é possível seguir na operação. Solicitamos o valor que será transferido

            # Aqui verificamos se o valor é negativo
            if valor_transferencia < 0:
              print('\nNão é possível transferir um valor negativo. Tente novamente.')
              break

            # Aqui verificamos se o saldo é suficiente
            elif valor_transferencia > conta_em_consulta['saldo_conta']:
              print('\nNão é possível transferir um valor maior que o seu saldo. Tente novamente.')
              break

            # Aqui, após confirmar que tudo está correto para operação, fazemos então a transferência do valor da conta A para B
            else:
              conta_em_consulta['saldo_conta'] -= valor_transferencia
              conta_destino_em_consulta['saldo_conta'] += valor_transferencia
              print('\nOperação efetuada com sucesso.')
              break


        print()
      else:
        verificador_etapa = 2
        break

  if verificador_etapa == 0:
    print('\nA sua conta não foi encontrada. Tente novamente.')
  elif verificador_etapa == 1:
    print('\nA conta de destino não foi encontrada. Tente novamente.')
  elif verificador_etapa == 2:
    print('\nNão é possível transferir valores entre as mesmas contas. Tente novamente.')

def consultar_saldo_de_conta():
  numero_conta = input('Digite o número da conta para consultar o saldo:\n>>> ')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      if conta_em_consulta['saldo_conta'] >= 0:
        status = 'Positivo'
      else:
        status = 'Negativo'
      print(f"\nO saldo e: R$ {conta_em_consulta['saldo_conta']:.2f} ({status})")
      return
  print('\nO número da conta não foi encontrado. Tente novamente.')

#-----------------------------------------------------------------------
print(">>> Bem vindo ao Sistema Bancário <<<")
programa_ativo = True

while True:
  print("\n### Menu ###") # Utilizar o "\n" para realizar a função de QUEBRAR A LINHA, para escrever na linha de baixo
  print("0 - Sair")
  print("1 - Criar uma nova conta")
  print("2 - Remover uma conta")
  print("3 - Listar todas as contas")
  print("4 - Adicionar saldo")
  print("5 - Remover saldo")
  print("6 - Transferir valor entre contas")
  print("7 - Consultar saldo de uma conta")
  numero_operacao = input('Selecione a operação que deseja realizar:\n>>> ')

  if numero_operacao == "0":
    print('\nSistema encerrado.')
    break

# Operação 1 - Criar uma nova conta
  elif numero_operacao == "1":
    criar_conta()

# Operação 2 - Remover uma conta
  elif numero_operacao == "2":
    remover_conta()

# Operação 3 - Listar todas as contas
  elif numero_operacao == "3":
    listar_contas()

# Operação 4 e 5 - Adicionar e Remover saldo

  elif numero_operacao == "4":
   adicionar_saldo_em_conta()

  elif numero_operacao == "5":
   remover_saldo_em_conta()

# Operação 6 - Transferir valor entre contas

  elif numero_operacao == "6":
   transferir_saldo_entre_contas()

# Operação 7 - Consultar saldo de uma conta

  elif numero_operacao == "7":
   consultar_saldo_de_conta()

# Operação Inválida
  else:
    print('\nOperação inválida.')

